version: '3.8'

services:
  db:
    image: postgres:15.1-alpine
    volumes:
      - /var/lib/postgresql/data/
    env_file:
      - .env
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -d ${POSTGRES_DB} -U ${POSTGRES_USER}" ]
      interval: 5s
      timeout: 20s
      retries: 100
    ports:
      - "5432:5432"
    expose:
      - 5432
    networks:
      - web_network

  web:
    build:
      context: .
      dockerfile: Dockerfile
    env_file:
      - .env
    entrypoint: >
      sh -c "
        alembic upgrade head &&
        uvicorn app.main:app --host 0.0.0.0 --reload
      "
    volumes:
      - .:/app
    networks:
      - web_network
    ports:
     - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy

  redis:
    image: redis:latest
    expose:
      - 6379
    ports:
      - "6379:6379"
    networks:
      - web_network
    healthcheck:
      test: ["CMD-SHELL", "redis-cli", "ping"]
      interval: 5s
      timeout: 20s
      retries: 20

  celery:
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - .:/app
    entrypoint: >
      sh -c "
        celery -A app.report.celery worker --loglevel=info

      "
    env_file:
      - .env
    networks:
      - web_network

  rabbitmq:
    image: rabbitmq:latest
    container_name: rabbitmq
    restart: always
    hostname: rabbitmq
    env_file:
      - .env
    environment:
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_USER}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_PASSWORD}
    volumes:
      - ./rabbitmq:/var/lib/rabbitmq
    expose:
      - 5672
      - 15692
    ports:
      - "5672:5672"
      - "15692:15692"
    networks:
      - web_network
    healthcheck:
      test: [ "CMD", "rabbitmq-diagnostics", "-q", "ping" ]
      interval: 10s
      timeout: 30s
      retries: 20

networks:
  web_network:
    name: web_network
